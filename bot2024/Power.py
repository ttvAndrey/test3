from math import pi
#num=int(input("Ведите любое число! "))
#print(f"Квадрат числа {num**2}")
'''
temperature=int(input("Ведите сколько у вас градусов! "))
if temperature>15:
    print("На улице жарко")
elif temperature==0:
    print("Не тепло и не холодно")
#elif num in range(16):
    #print("На улицу комфортно")
elif temperature>0 and temperature<=15:
    print("На улице комфортно!")
else:
    print("На улице холодно, одевайтесь тепло")
'''
'''
int,float,str,bool,list,tuple,dict
num=890.78
name='Андрей'
sturt=True
pake=[569,609,0,1,-65,'Хай',name,sturt,num]
pake.append(52)
len(pake)
len(name)
library={'Продфвец обуви':'Fil',"Книга изгой":'Aleks'}
pake[-1]
library["Книга изгой"]
range(10,1,-1)
'''
'''
w=0
sum=int(input("Ведите число! "))
som=int(input("Ведите число! "))
for i in range(sum+1,som):
    if i%2==0:
        w+=i
print(w)
'''
'''
sum=0
sum=int(input("Ведите число! "))
sum+=int(input("Ведите число! "))
sum+=int(input("Ведите число! "))
print(sum)
'''
'''

w=0
sum=int(input("Ведите число! "))
som=int(input("Ведите число! "))
sem=(input("Введите операцию!"))
if sem=="+":
    w=sum+som
elif sem=="-":
    w=sum-som
elif sem=="*":
    w=sum*som
elif sem=="/":
    if som==0:
        print("На ноль делить нельзя!")
    else:
        w=sum/som
else:
    print("Неверная операция")
print(w)

'''
'''
# 1. Создать произвольный список
l=["!##","слово",1232453]
# 2. Добавить новый элемент типа str в конец списка
l.append("Ручка")
# 3. Добавить новый элемент типа int на место с индексом
l[1]=1488
# 4. Добавить новый элемент типа list в конец списка
l.append([52,67,0])
# 5. Добавить новый элемент типа tuple на место с индексом
l[-3]=(24,56)
# 6. Получить элемент по индексу
print(l[2])
# 7. Удалить элемент
l.remove(l[0])
# 8. Найти число повторений элемента списка
print(l.count(1488))
print(l)
'''
'''
# 1. Создать произвольный словарь
l={52:"12",62:"12"}
# 2. Добавить новый элемент с ключом типа str и значением типа in
l["lox"]=0
# 3. Добавить новый элемент с ключом типа кортеж(tuple) и значением типа список(list)
l[(24,78)]=[45,90]
# 4. Получить элемент по ключу
print(l["lox"])
print(l.get("lox1","элемента нет"))
# 5. Удалить элемент по ключу
l.pop(62,"Эдемента нет")
# 6. Получить список ключей словаря
print(l.keys())
'''
'''
def foo(a,b):
    print(a,b)
foo(77,"hello")
'''
'''
Виды функций:
1Встроеные
2Пользовательские
3Лямбда
4Импорт
5Методы
Встроеные функции:
len-определяет длину объекта(строка-длина строки(кол-во символов),список-длина списка(кол-во элементов))

range-создание диопазона

abs-на вход дается число и возращается НЕ  отриц. значение

chr-(Возвращает строку, представляющую символ, кодовой точкой которого в Юникоде является целое число i. 
Например, возвращает строку , а возвращает строку . Это обратная величина)

dict-(Создайте новый словарь. Объектом является класс словаря. See и Mapping Types — словарь для документации по этому классу.)

float-(числа с плавающей точкой)

input- Функция input () - ввод данных. За ввод в программу данных с клавиатуры в Python отвечает функция input (). 
Когда вызывается эта функция, программа останавливает свое выполнение и ждет, когда пользователь введет текст. 
После этого, когда он нажмет Enter, функция input () заберет введенный текст и передаст его программе, 
которая уже будет обрабатывать его согласно своим алгоритмам.

int-целые числа

list-последовательность элементов пронумерованых по индексам

map-Возвращает итератор, который применяет функцию к каждому элементу итерируемого объекта, получения результатов. 
Если передаются дополнительные итерируемые аргументы, функция должна принимать это количество аргументов
и применяться к элементам из всех итерируемые объекты параллельно. 
При наличии нескольких итераций итератор останавливается, когда Кратчайший итерируемый объект исчерпан. 
Для случаев, когда входные данные функции уже упорядоченные в кортежи аргументов, см. .

max-выводит наибольшее число. Метод mи словами, в Python метод max () возвращаеax () – возвращает наибольший из своих аргументов – значение, ближайшее к положительной бесконечности. 
Простымт максимальное значение из чисел.

pow-возводит число в степень. Она принимает два параметра: какое число возводить и в какую степень возводить. 
Если вызывать pow () без параметров, то Python выдаст следующее:". TypeError: pow expected at least 2 arguments, got 0". 
Интерпретатор сообщает, что функция ожидает два параметра, а вы вызвали ее без них. 
Функция pow () всегда имеет два обязательных параметра, поэтому ее невозможно вызвать с другим количеством параметров.

print-в Python используется для вывода текстовой информации на экран или в консоль. 
Эта функция может принимать один или несколько аргументов. Одним из обязательных аргументов является строка или объект, 
который будет выведен. Вы наверняка знакомы с этой функцией. С неё начинается любой урок по программированию на Python. 
print ("Hello, World!"). В данном случае функция выведет в консоль сообщение: Hello, World!

sorted-в Python, выполняет сортировку. Выполняет сортировку последовательности по возростанию/убыванию. 

str-текстовые данные

sum Python — это встроенная функция, которая вычисляет сумму набора чисел или итерируемых объектов. 
В качестве аргумента он принимает итерируемый объект, например список, кортеж или набор, 
и возвращает сумму всех элементов внутри итерируемого объекта. 
Это удобный способ быстро вычислить общие числовые значения в Python.

Создайте класс Soda (для определения типа газированной воды), принимающий 1 аргумент при инициализации 
(отвечающий за добавку к выбираемому лимонаду). 
В этом классе реализуйте метод show_my_drink(), выводящий на печать 
«Газировка и {ДОБАВКА}» в случае наличия добавки, а иначе отобразится следующая фраза: 
«Обычная газировка».

class Human:
    def __init__(self, name, age, hair_color, eye_color):
        #задание атрибутов
        self.name = name
        self.age = age
        self.hair_color = hair_color
        self.eye_color = eye_color
    def run(self):
        print(f"Я {self.name} бегу!")

    def __del__(self):
        print(f"Я удаляюсь {self.name}")

def run(r):
    print(f"Я {r.name} бегу!")

def work():
    people = Human("Алексей",19,"Русый","Карий")


murad = Human("Мурад",19,"Русый","Карий")
andrew = Human("Андрей",13,"Коричневый","Голубой")

murad.age = 20


work()
####вызов деструтора алексей
print("hh")
andrew.run()#метод
run(andrew)#функция
print("hh1")

Напишите программу на Python для создания класса, представляющего Circle. 
Включите методы для вычисления его площади и периметра.
'''
'''
class SimplePass:
    pass
uy=SimplePass()
print(type(uy))
'''
r=int(input("Введите любое число! "))
class S():
    def __init__(self,r):
        self.r=r
    def getArea(self):
        help=pi*(r**2)
        return help
    def getPerimeter(self):
        post=2*pi*r
        return post
def war(a):
    x=a

print(war(10))
hp=S(10)
hp.r
pop=S(r)
hj=pop.getArea()
jhg=pop.getPerimeter()
print(hj,jhg)


    
